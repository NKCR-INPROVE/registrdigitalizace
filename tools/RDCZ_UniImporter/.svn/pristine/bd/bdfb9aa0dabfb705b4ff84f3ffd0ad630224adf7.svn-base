/* *****************************************************************************
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.incad.relief3.rdcz.uniimporter.demons;

import cz.incad.relief3.rdcz.uniimporter.model.DataHarvesterDemon;
import cz.incad.relief3.rdcz.uniimporter.model.IssueHeap;
import cz.incad.relief3.rdcz.uniimporter.model.OneIssue;
import cz.incad.relief3.rdcz.uniimporter.utils.OneSource;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;


/** ****************************************************************************
 *
 * @author martin
 */
public class DataHarvesterDemonDirectory extends DataHarvesterDemon {
    private static final Logger LOG = Logger.getLogger(DataHarvesterDemonDirectory.class.getName());


    /** ************************************************************************
     * 
     * @param source 
     */
    public DataHarvesterDemonDirectory(OneSource source) {
        super(source);
    }

    /** ************************************************************************
     * Metoda kontrolující parametry Source.
     * @return 
     */
    protected final boolean validateSource() {
        //TODO
        return true;
    }

    /** ************************************************************************
     * 
     */
    public void getData() {
        LOG.log(Level.INFO, "DataHarvesterDemonDirectory start harvesting...");
        File sourceDirectory = new File(this.source.source_argument1);
        File destinationFile;
        OneIssue oneIssue;

        for (File sourceFile:sourceDirectory.listFiles()) {
            // Odfiltrujeme pouze soubory
            if (sourceFile.isFile()) {
                // Soubory přesuneme do pracovní složky se změněným jménem a zaregistrujeme do IssueHeap.
                destinationFile = getDestinationFile(sourceFile.getName());
                LOG.log(Level.INFO, "Move file {0} -> {1}", new Object[]{sourceFile.getAbsolutePath(), destinationFile.getAbsolutePath()});
                sourceFile.renameTo(destinationFile);
                //Vytvoříme nové OneIssue
                oneIssue = new OneIssue(destinationFile, source);
                //Zapíšeme do issue informace o Properties
                oneIssue.appendLogPropertiesInfo(this.source.getInfo());
                //Zaregistrujeme nové OneIssue do IssueHeap
                IssueHeap.getInstance().addIssue(oneIssue);
            }
        }
    }

}
