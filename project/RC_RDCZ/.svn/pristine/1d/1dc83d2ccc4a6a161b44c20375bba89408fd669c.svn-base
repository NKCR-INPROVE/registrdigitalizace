/* *****************************************************************************
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.incad.rd.bf;

import com.amaio.plaant.businessFunctions.ApplicationErrorException;
import com.amaio.plaant.businessFunctions.RecordsIterator;
import com.amaio.plaant.businessFunctions.ValidationException;
import com.amaio.plaant.businessFunctions.WizardException;
import com.amaio.plaant.businessFunctions.WizardMessage;
import com.amaio.plaant.desk.QueryException;
import com.amaio.plaant.desk.container.PlaantUniqueKey;
import com.amaio.plaant.metadata.Metadata;
import com.amaio.plaant.sync.Record;
import com.amaio.plaant.sync.UniqueKey;
import cz.incad.core.bf.BussinessFunctionMother;
import cz.incad.core.tools.ReliefLogger;
import cz.incad.core.tools.ReliefWizardMessage;
import cz.incad.rd.PredlohaEntity;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/** ****************************************************************************
 *
 * @author martin
 */
public class Predloha_ZmenaStavuZaznamuByMetadata extends BussinessFunctionMother {
    private static final String LOCAL_SECURITY = "data118";
    public static final String f_newStavZaznamu = "newStavZaznamu";
    private String newValue = null;

    /** ************************************************************************
     * 
     * @return
     * @throws ValidationException
     * @throws WizardException 
     */
    public WizardMessage startWizard() throws ValidationException, WizardException {
        securityStartWizard(LOCAL_SECURITY);
        ReliefWizardMessage rwm = new ReliefWizardMessage();
        try {
            RecordsIterator ritRecords = getWizardContextClient().getRecordsIterator(getWizardContextClient().getMetadata());
            rwm.addInfo("Počet vybraných záznamů: " + ritRecords.getRecordsCount(), null, null, null, null, 0);
        } catch (QueryException ex) {
            Logger.getLogger(Predloha_ZmenaStavuZaznamuByMetadata.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rwm;
    }

    /** ************************************************************************
     * 
     * @param panelName
     * @return
     * @throws ValidationException
     * @throws WizardException 
     */
    public WizardMessage panelLeave(String panelName) throws ValidationException, WizardException {
        if (panelName.equals("panel01")) {
            this.newValue = getWizardContextClient().getWizardRecord().getSimpleField(Predloha_ZmenaStavuZaznamuByMetadata.f_newStavZaznamu).getValue().toString();
        }
        return null;
    }

    /** ************************************************************************
     * Funkce vezme aktuální metadata uživatele
     * a vyfltrovaným záznamům nastaví nový stav.
     * @return
     * @throws ValidationException
     * @throws WizardException
     * @throws ApplicationErrorException 
     */
    public WizardMessage runBusinessMethod() throws ValidationException, WizardException, ApplicationErrorException {
        ReliefWizardMessage rwm = new ReliefWizardMessage();
        int countAll = 0;
        int countOK = 0;
        int countKO = 0;
        Record recPredloha = null;
        String fail = "";
        List<UniqueKey> lAllRecords = new LinkedList<UniqueKey>();

        //získáme aktuální metadata
        Metadata mtd = getWizardContextClient().getMetadata();
        
        try {
            RecordsIterator ritRecords = getWizardContextClient().getRecordsIterator(mtd);
            while (ritRecords.hasMoreRecords()) {
                lAllRecords.add(ritRecords.nextRecord().getKey());
            }
        } catch (QueryException ex) {
            rwm.addUpozorneni("Došlo k neočekávané chybě, záznamy nebyly změněny.", null, null, null, null, 0);
            ReliefLogger.severeTrace("Chyba pri tvorbe metadat.", ex.getMessage(), ex);
            getWizardContextClient().rollback();
        }

        for (int i = 0; i < lAllRecords.size(); i++) {
            try {
                recPredloha = getWizardContextClient().getRecord((PlaantUniqueKey)lAllRecords.get(i));
                recPredloha.getSimpleField(PredlohaEntity.f_stavRec).setValue(this.newValue);
                getWizardContextClient().commit();
                countOK++;
            } catch(Exception exAll) {
                countKO++;
                fail += recPredloha.getSimpleField(PredlohaEntity.f_idCislo).getValue() + ",";
                ReliefLogger.severeTrace("Chyba pri commitu.", exAll.getMessage(), exAll);
                getWizardContextClient().rollback();
            }
        }
        rwm.addInfo("Vybráno záznamů celkem: " + countAll, "Zpracované: " + countOK, "Nezpracované: " + countKO, fail, null, 0);

        return rwm;
    }

}
